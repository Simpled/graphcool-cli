import { ProjectDefinition } from '../../src/types'

export const mockDefinition: ProjectDefinition = {
  "modules": [
    {
      "name": "",
      "content": "types: ./types.graphql\nfunctions: {}\npermissions:\n- isEnabled: true\n  operation: File.read\n  authenticated: false\n  fields:\n  - citeb70071kux0171fotcy72i\n- isEnabled: true\n  operation: File.create\n  authenticated: false\n  fields:\n  - citeb70071kux0171fotcy72i\n- isEnabled: true\n  operation: File.update\n  authenticated: false\n  fields:\n  - citeb70071kux0171fotcy72i\n- isEnabled: true\n  operation: File.delete\n  authenticated: false\n  fields:\n  - citeb70071kux0171fotcy72i\n- isEnabled: true\n  operation: Test2.read\n  authenticated: false\n  fields:\n  - citeb8srj1kwu0171t6vlu9bm\n  - citeba1y41ky70171s6ayttk6\n  - citeb9oy81kxq0171w7b5oubr\n  - ciu2tr1g30lta0128w5lci55v\n  - citeb7dma1kvo0171rnu3hmtl\n  - citeb750k1kv80171467d5kqg\n  - citeb8jfh1kwi0171763qxdhb\n  - ciu2tqdva0lsd0128mbwpukl5\n  - ciu2tqv6i0lsy012872q4llwj\n  - citeb92x71kx70171zrm19ct5\n- isEnabled: true\n  operation: Test2.create\n  authenticated: false\n  fields:\n  - citeb8srj1kwu0171t6vlu9bm\n  - citeba1y41ky70171s6ayttk6\n  - citeb9oy81kxq0171w7b5oubr\n  - ciu2tr1g30lta0128w5lci55v\n  - citeb7dma1kvo0171rnu3hmtl\n  - citeb750k1kv80171467d5kqg\n  - citeb8jfh1kwi0171763qxdhb\n  - ciu2tqdva0lsd0128mbwpukl5\n  - ciu2tqv6i0lsy012872q4llwj\n  - citeb92x71kx70171zrm19ct5\n- isEnabled: true\n  operation: Test2.update\n  authenticated: false\n  fields:\n  - citeb8srj1kwu0171t6vlu9bm\n  - citeba1y41ky70171s6ayttk6\n  - citeb9oy81kxq0171w7b5oubr\n  - ciu2tr1g30lta0128w5lci55v\n  - citeb7dma1kvo0171rnu3hmtl\n  - citeb750k1kv80171467d5kqg\n  - citeb8jfh1kwi0171763qxdhb\n  - ciu2tqdva0lsd0128mbwpukl5\n  - ciu2tqv6i0lsy012872q4llwj\n  - citeb92x71kx70171zrm19ct5\n- isEnabled: true\n  operation: Test2.delete\n  authenticated: false\n  fields:\n  - citeb8srj1kwu0171t6vlu9bm\n  - citeba1y41ky70171s6ayttk6\n  - citeb9oy81kxq0171w7b5oubr\n  - ciu2tr1g30lta0128w5lci55v\n  - citeb7dma1kvo0171rnu3hmtl\n  - citeb750k1kv80171467d5kqg\n  - citeb8jfh1kwi0171763qxdhb\n  - ciu2tqdva0lsd0128mbwpukl5\n  - ciu2tqv6i0lsy012872q4llwj\n  - citeb92x71kx70171zrm19ct5\n- isEnabled: true\n  operation: User.read\n  authenticated: false\n  fields:\n  - citeb6zaw1kur01715296waj0\n  - citeb6zze1kuv0171j9e6g8t7\n  - citeb6zaw1kut0171m86b5rru\n- isEnabled: true\n  operation: User.create\n  authenticated: false\n  fields:\n  - citeb6zaw1kur01715296waj0\n  - citeb6zze1kuv0171j9e6g8t7\n  - citeb6zaw1kut0171m86b5rru\n- isEnabled: true\n  operation: User.update\n  authenticated: false\n  fields:\n  - citeb6zaw1kur01715296waj0\n  - citeb6zze1kuv0171j9e6g8t7\n  - citeb6zaw1kut0171m86b5rru\n- isEnabled: true\n  operation: User.delete\n  authenticated: false\n  fields:\n  - citeb6zaw1kur01715296waj0\n  - citeb6zze1kuv0171j9e6g8t7\n  - citeb6zaw1kut0171m86b5rru\npats: {}\n",
      "files": {
        "./types.graphql": "type File implements Node {\n  contentType: String!\n  id: ID! @isUnique\n  name: String!\n  secret: String! @isUnique\n  size: Int!\n  url: String! @isUnique\n}\n\nenum TEST2_ENUMY {\n  A\n  B\n  C\n}\n\ntype Test2 implements Node {\n  booly: Boolean @defaultValue(value: false)\n  date: DateTime @defaultValue(value: \"2016-09-22T12:25:06.666\")\n  enumy: TEST2_ENUMY\n  fiield: String\n  float: Float @defaultValue(value: 0.0)\n  id: ID! @isUnique\n  integer: Int @defaultValue(value: 0)\n  json: Json\n  some: String\n  stringy: String @defaultValue(value: \"\")\n}\n\nenum USER_ROLES {\n  ADMIN\n}\n\ntype User implements Node {\n  email: String @isUnique\n  id: ID! @isUnique\n  password: Password\n  roles: [USER_ROLES!]\n}"
      }
    }
  ]
}

export const changedMockDefinition: ProjectDefinition = {
  "modules": [
    {
      "name": "",
      "content": "types: ./types.graphql\nfunctions: {}\npermissions:\n- isEnabled: true\n   operation: File.read\n  authenticated: false\n  fields:\n  - citeb70071kux0171fotcy72i\n- isEnabled: true\n  operation: File.create\n  authenticated: false\n  fields:\n  - citeb70071kux0171fotcy72i\n- isEnabled: true\n  operation: File.update\n  authenticated: false\n  fields:\n  - citeb70071kux0171fotcy72i\n- isEnabled: true\n  operation: File.delete\n  authenticated: false\n  fields:\n  - citeb70071kux0171fotcy72i\n- isEnabled: true\n  operation: Test2.read\n  authenticated: false\n  fields:\n  - citeb8srj1kwu0171t6vlu9bm\n  - citeba1y41ky70171s6ayttk6\n  - citeb9oy81kxq0171w7b5oubr\n  - ciu2tr1g30lta0128w5lci55v\n  - citeb7dma1kvo0171rnu3hmtl\n  - citeb750k1kv80171467d5kqg\n  - citeb8jfh1kwi0171763qxdhb\n  - ciu2tqdva0lsd0128mbwpukl5\n  - ciu2tqv6i0lsy012872q4llwj\n  - citeb92x71kx70171zrm19ct5\n- isEnabled: true\n  operation: Test2.create\n  authenticated: false\n  fields:\n  - citeb8srj1kwu0171t6vlu9bm\n  - citeba1y41ky70171s6ayttk6\n  - citeb9oy81kxq0171w7b5oubr\n  - ciu2tr1g30lta0128w5lci55v\n  - citeb7dma1kvo0171rnu3hmtl\n  - citeb750k1kv80171467d5kqg\n  - citeb8jfh1kwi0171763qxdhb\n  - ciu2tqdva0lsd0128mbwpukl5\n  - ciu2tqv6i0lsy012872q4llwj\n  - citeb92x71kx70171zrm19ct5\n- isEnabled: true\n  operation: Test2.update\n  authenticated: false\n  fields:\n  - citeb8srj1kwu0171t6vlu9bm\n  - citeba1y41ky70171s6ayttk6\n  - citeb9oy81kxq0171w7b5oubr\n  - ciu2tr1g30lta0128w5lci55v\n  - citeb7dma1kvo0171rnu3hmtl\n  - citeb750k1kv80171467d5kqg\n  - citeb8jfh1kwi0171763qxdhb\n  - ciu2tqdva0lsd0128mbwpukl5\n  - ciu2tqv6i0lsy012872q4llwj\n  - citeb92x71kx70171zrm19ct5\n- isEnabled: true\n  operation: Test2.delete\n  authenticated: false\n  fields:\n  - citeb8srj1kwu0171t6vlu9bm\n  - citeba1y41ky70171s6ayttk6\n  - citeb9oy81kxq0171w7b5oubr\n  - ciu2tr1g30lta0128w5lci55v\n  - citeb7dma1kvo0171rnu3hmtl\n  - citeb750k1kv80171467d5kqg\n  - citeb8jfh1kwi0171763qxdhb\n  - ciu2tqdva0lsd0128mbwpukl5\n  - ciu2tqv6i0lsy012872q4llwj\n  - citeb92x71kx70171zrm19ct5\n- isEnabled: true\n  operation: User.read\n  authenticated: false\n  fields:\n  - citeb6zaw1kur01715296waj0\n  - citeb6zze1kuv0171j9e6g8t7\n  - citeb6zaw1kut0171m86b5rru\n- isEnabled: true\n  operation: User.create\n  authenticated: false\n  fields:\n  - citeb6zaw1kur01715296waj0\n  - citeb6zze1kuv0171j9e6g8t7\n  - citeb6zaw1kut0171m86b5rru\n- isEnabled: true\n  operation: User.update\n  authenticated: false\n  fields:\n  - citeb6zaw1kur01715296waj0\n  - citeb6zze1kuv0171j9e6g8t7\n  - citeb6zaw1kut0171m86b5rru\n- isEnabled: true\n  operation: User.delete\n  authenticated: false\n  fields:\n  - citeb6zaw1kur01715296waj0\n  - citeb6zze1kuv0171j9e6g8t7\n  - citeb6zaw1kut0171m86b5rru\npats: {}\n",
      "files": {
        "./types.graphql": "type File implements Node {\n  contentType: String!\n  id: ID!  @isUnique\n  name: String!\n  secret: String! @isUnique\n  size: Int!\n  url: String! @isUnique\n}\n\nenum TEST2_ENUMY {\n  A\n  B\n  C\n}\n\ntype Test2 implements Node {\n  booly: Boolean @defaultValue(value: false)\n  date: DateTime @defaultValue(value: \"2016-09-22T12:25:06.666\")\n  enumy: TEST2_ENUMY\n  fiield: String\n  float: Float @defaultValue(value: 0.0)\n  id: ID! @isUnique\n  integer: Int @defaultValue(value: 0)\n  json: Json\n  some: String\n  stringy: String @defaultValue(value: \"\")\n}\n\nenum USER_ROLES {\n  ADMIN\n}\n\ntype User implements Node {\n  email: String @isUnique\n  id: ID! @isUnique\n  password: Password\n  roles: [USER_ROLES!]\n}"
      }
    }
  ]
}

export const mockFileNames: string[] = ['/code/chargeCreditCard.js',
  '/code/checkAvailability.graphql',
  '/code/checkAvailability.js',
  '/code/sendReceiptToCustomer.graphql',
  '/databaseSchema/project.graphql',
  '/permissions/cj6ck6o9i0000wd98eyplfjn2.graphql',
  '/permissions/cj6ck6o9n0001wd98cpatb52d.graphql',
  '/permissions/pid.graphql',
  '/project.gcl']

export const mockFiles: string[] = ['// charge the credit card ...',
  '\ntype AvailabilityPayload {\n  isAvailable: Boolean!\n}\n\nextend type Query {\n  checkAvailability(what: String!): AvailabilityPayload!\n}\n    "',
  'module.exports = function { return {data: {isAvailable: true}}}"',
  'subscription { Todo{node{title}} }"',
  'type Comment implements Node {\n  id: ID! @isUnique\n  isHighlightedOf: Todo @relation(name: "CommentToTodo")\n  text: String!\n  todo: [Todo!]! @relation(name: "CommentToTodo")\n}\n\ntype Todo implements Node {\n  comments: Comment! @relation(name: "CommentToTodo")\n  highlightedComment: Comment @relation(name: "CommentToTodo")\n  id: ID! @isUnique\n  score: Float @defaultValue(value: 3.1415)\n  status: TodoStatus @defaultValue(value: Done)\n  title: String! @defaultValue(value: "Default Title")\n}\n\nenum TodoStatus {\n  Active\n  Done\n}\n\ntype User implements Node {\n  id: ID! @isUnique\n}',
  'this is a permission query',
  'this is another permission query',
  'some graph query for relation permission',
  '{\n  databaseSchema: {\n    src: "./databaseSchema/project.graphql"\n  }\n  modelPermissions: [{\n    description: "some description"\n    isEnabled: true\n    operation: "Todo.READ"\n    authenticated: true\n    query: {\n      src: "./permissions/cj6ck6o9i0000wd98eyplfjn2.graphql"\n    }\n    fields: ["*"]\n  }, {\n    isEnabled: true\n    operation: "Todo.READ"\n    authenticated: false\n    query: {\n      src: "./permissions/cj6ck6o9n0001wd98cpatb52d.graphql"\n    }\n    fields: ["todo.status"]\n  }, {\n    isEnabled: true\n    operation: "Comment.READ"\n    authenticated: false\n    fields: ["*"]\n  }, {\n    isEnabled: true\n    operation: "Comment.CREATE"\n    authenticated: false\n    fields: ["*"]\n  }, {\n    isEnabled: true\n    operation: "Comment.UPDATE"\n    authenticated: false\n    fields: ["*"]\n  }, {\n    isEnabled: true\n    operation: "Comment.DELETE"\n    authenticated: false\n    fields: ["*"]\n  }, {\n    isEnabled: true\n    operation: "User.READ"\n    authenticated: false\n    fields: ["*"]\n  }, {\n    isEnabled: true\n    operation: "User.CREATE"\n    authenticated: false\n    fields: ["*"]\n  }, {\n    isEnabled: true\n    operation: "User.UPDATE"\n    authenticated: false\n    fields: ["*"]\n  }, {\n    isEnabled: true\n    operation: "User.DELETE"\n    authenticated: false\n    fields: ["*"]\n  }]\n  relationPermissions: [{\n    isEnabled: true\n    relation: "CommentToTodo"\n    connect: true\n    disconnect: false\n    authenticated: true\n    query: {\n      src: "./permissions/pid.graphql"\n    }\n  }, {\n    isEnabled: true\n    relation: "CommentToTodo"\n    connect: true\n    disconnect: true\n    authenticated: false\n  }]\n  functions: [{\n    name: "chargeCreditCard"\n    isEnabled: true\n    handler: {\n      code: {\n        src: "./code/chargeCreditCard.js"\n      }\n    }\n    nodeCallback: {\n      target: "Todo"\n      operation: CREATE\n      step: TRANSFORM_RESPONSE\n      order: 0\n    }\n  }, {\n    name: "sendReceiptToCustomer"\n    isEnabled: true\n    handler: {\n      webhook: {\n        url: "some.url"\n        headers: []\n      }\n    }\n    serversideSubscription: {\n      subscriptionQuery: {\n        src: "./code/sendReceiptToCustomer.graphql"\n      }\n    }\n  }, {\n    name: "checkAvailability"\n    isEnabled: true\n    handler: {\n      code: {\n        src: "./code/checkAvailability.js"\n      }\n    }\n    serversideSubscription: {\n      schemaExtension: {\n        src: "./code/checkAvailability.graphql"\n      }\n    }\n  }]\n  pats: []\n}']
